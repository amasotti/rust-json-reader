# This is an example GitHub Actions workflow that will allow you to build your project with every push or pull request.
# For more information, see:
# https://docs.github.com/actions/reference/workflow-syntax-for-github-actions

name: Rust Build

on:
  push:
      branches: ["main"]
  workflow_dispatch:


permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.increment-version.outputs.new-version }}
    steps:
      - uses: actions/checkout@v4

      - name: "ü¶Ä Set up Rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1.8.0
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: "üßπ Lint"
        run: make lint

      - name: "üß™ Test"
        run: make test

      - name: "‚¨ÜÔ∏è Increment version"
        id: increment-version
        uses: RichardInnocent/semantic-versioning-git@v0.0.1

      - name: "‚¨áÔ∏è Commit Changelog"
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          set +e
          git add CHANGELOG.md
          git commit -m "Update changelog"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git main

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: "üé® Generate a changelog"
        id: generate-changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: cliff.toml
          args: --verbose --current
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: "Create Github Release"
        if: github.ref == 'refs/heads/main'
        env:
          TAG: ${{ needs.build.outputs.new-version }}
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create $TAG --target=main --title="Release $TAG" --notes-file=CHANGELOG.md
